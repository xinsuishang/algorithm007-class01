# 学生出勤记录2
# 给定一个正整数 n，返回长度为 n 的所有可被视为可奖励的出勤记录的数量，出勤记录只包含三个字符的字符串：'A':缺勤;'L':迟到;'P'：到场，如果记录不包含多于一个'A'或者超过两个连续的'L'，则该记录被视为可奖励
class Solution:
    def checkRecord(self, n: int) -> int:  
        M = 10**9 + 7        
        if n == 0: return 1
        # 对于某个长度为i的记录序列，以下变量表示对于情况的序列数量
        # p：序列中没有A，最新的一个记录不是L
        # AP：序列中有过A，最新的一个记录不是L
        # L: 序列中没有A，最新的一个记录是L
        # AL：序列中有过A，最新的一个记录是L
        # LL：序列中没有A，最新的两个记录是LL
        # ALL：序列中有A，最新的两个记录是LL
        # A：最新的记录是A

        #对于长度为1的情况，记录的第一次是 P, L, A 均可奖励，都是只有1种
        P, AP, L, AL, LL, ALL, A =1, 0, 1, 0, 0, 0, 1
        for i in range(2, n+1):
            #等号左边计算长度为i的记录序列的结果，右边引用长度为i - 1的记录序列的结果
            #必须写在一起，否则可能引用的是更新过后的值
            P, AP, L, LL, AL, ALL, A = ((P + L + LL) % M, 
                 (AP + AL + ALL + A) % M,
                 P,
                 L,
                (AP + A) % M,
                 AL,
                (P + L + LL) % M)
        return (P + AP + L + LL + AL + ALL + A)    